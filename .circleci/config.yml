# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  myjob1:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:          
          command: echo "Hello, World!"
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  # Exercise: Config and Deployment
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["26:5e:e9:e3:64:43:a9:ae:69:a1:8f:40:ae:06:e9:32"]
      - run:
          name: Install Ansible
          command: apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: ansible-playbook -i inventory main.yml
  smoke_test:
    docker:
     - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
         name: test smoke
         command:  
          URL="https://blog.udacity.com"
          if curl -s --head ${URL}
          then
            return 0
          else
             return 1
          fi
  smoke_test1:
    docker:
     - image: alpine:latest
    steps:
      - run:
         name: Test job
         # Fail the job intentionally to simulate an error.
         command:  return 1
      - destroy_environment

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  myworkflows:
    jobs:
      - myjob1
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test1
